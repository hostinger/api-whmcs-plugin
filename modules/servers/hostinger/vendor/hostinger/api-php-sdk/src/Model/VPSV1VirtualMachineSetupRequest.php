<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class VPSV1VirtualMachineSetupRequest 
{

    /**
     * @var int $templateId
     */
    private int $templateId;

    /**
     * @var int $dataCenterId
     */
    private int $dataCenterId;

    /**
     * @var int|null $postInstallScriptId
     */
    private ?int $postInstallScriptId;

    /**
     * @var string|null $password
     */
    private ?string $password;

    /**
     * @var string|null $hostname
     */
    private ?string $hostname;

    /**
     * @var bool|null $installMonarx
     */
    private ?bool $installMonarx;

    /**
     * @var bool|null $enableBackups
     */
    private ?bool $enableBackups;

    /**
     * @var string|null $ns1
     */
    private ?string $ns1;

    /**
     * @var string|null $ns2
     */
    private ?string $ns2;

    /**
     * @var \Hostinger\Model\VPSV1VirtualMachineSetupRequestPublicKey|null $publicKey
     */
    private ?\Hostinger\Model\VPSV1VirtualMachineSetupRequestPublicKey $publicKey;

    /**
    * @return int
    */
    public function getTemplateId(): int
    {
        return $this->templateId;
    }

    /**
     * @param int $templateId Template ID
     */
    public function setTemplateId(int $templateId): self
    {
        $this->templateId = $templateId;

        return $this;
    }
    /**
    * @return int
    */
    public function getDataCenterId(): int
    {
        return $this->dataCenterId;
    }

    /**
     * @param int $dataCenterId Data center ID
     */
    public function setDataCenterId(int $dataCenterId): self
    {
        $this->dataCenterId = $dataCenterId;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getPostInstallScriptId(): ?int
    {
        return $this->postInstallScriptId;
    }

    /**
     * @param int|null $postInstallScriptId Post-install script ID
     */
    public function setPostInstallScriptId(?int $postInstallScriptId): self
    {
        $this->postInstallScriptId = $postInstallScriptId;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getPassword(): ?string
    {
        return $this->password;
    }

    /**
     * @param string|null $password Password for the virtual machine. If not provided, random password will be generated. Password will not be shown in the response.
     */
    public function setPassword(?string $password): self
    {
        $this->password = $password;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getHostname(): ?string
    {
        return $this->hostname;
    }

    /**
     * @param string|null $hostname Override default hostname of the virtual machine
     */
    public function setHostname(?string $hostname): self
    {
        $this->hostname = $hostname;

        return $this;
    }
    /**
    * @return bool|null
    */
    public function getInstallMonarx(): ?bool
    {
        return $this->installMonarx;
    }

    /**
     * @param bool|null $installMonarx Install Monarx malware scanner (if supported)
     */
    public function setInstallMonarx(?bool $installMonarx): self
    {
        $this->installMonarx = $installMonarx;

        return $this;
    }
    /**
    * @return bool|null
    */
    public function getEnableBackups(): ?bool
    {
        return $this->enableBackups;
    }

    /**
     * @param bool|null $enableBackups Enable weekly backup schedule
     */
    public function setEnableBackups(?bool $enableBackups): self
    {
        $this->enableBackups = $enableBackups;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getNs1(): ?string
    {
        return $this->ns1;
    }

    /**
     * @param string|null $ns1 Name server 1
     */
    public function setNs1(?string $ns1): self
    {
        $this->ns1 = $ns1;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getNs2(): ?string
    {
        return $this->ns2;
    }

    /**
     * @param string|null $ns2 Name server 2
     */
    public function setNs2(?string $ns2): self
    {
        $this->ns2 = $ns2;

        return $this;
    }
    /**
    * @return \Hostinger\Model\VPSV1VirtualMachineSetupRequestPublicKey|null
    */
    public function getPublicKey(): ?\Hostinger\Model\VPSV1VirtualMachineSetupRequestPublicKey
    {
        return $this->publicKey;
    }

    /**
     * @param \Hostinger\Model\VPSV1VirtualMachineSetupRequestPublicKey|null $publicKey publicKey
     */
    public function setPublicKey(?\Hostinger\Model\VPSV1VirtualMachineSetupRequestPublicKey $publicKey): self
    {
        $this->publicKey = $publicKey;

        return $this;
    }
}

