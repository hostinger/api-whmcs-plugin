<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class VPSV1DockerManagerContainerStatsResource 
{

    /**
     * @var float|null $cpuPercentage
     */
    private ?float $cpuPercentage;

    /**
     * @var float|null $memoryPercentage
     */
    private ?float $memoryPercentage;

    /**
     * @var float|null $memoryUsed
     */
    private ?float $memoryUsed;

    /**
     * @var float|null $memoryTotal
     */
    private ?float $memoryTotal;

    /**
     * @var int|null $netIn
     */
    private ?int $netIn;

    /**
     * @var int|null $netOut
     */
    private ?int $netOut;

    /**
    * @return float|null
    */
    public function getCpuPercentage(): ?float
    {
        return $this->cpuPercentage;
    }

    /**
     * @param float|null $cpuPercentage CPU usage in percentage
     */
    public function setCpuPercentage(?float $cpuPercentage): self
    {
        $this->cpuPercentage = $cpuPercentage;

        return $this;
    }
    /**
    * @return float|null
    */
    public function getMemoryPercentage(): ?float
    {
        return $this->memoryPercentage;
    }

    /**
     * @param float|null $memoryPercentage Memory usage in percentage
     */
    public function setMemoryPercentage(?float $memoryPercentage): self
    {
        $this->memoryPercentage = $memoryPercentage;

        return $this;
    }
    /**
    * @return float|null
    */
    public function getMemoryUsed(): ?float
    {
        return $this->memoryUsed;
    }

    /**
     * @param float|null $memoryUsed Used memory in bytes
     */
    public function setMemoryUsed(?float $memoryUsed): self
    {
        $this->memoryUsed = $memoryUsed;

        return $this;
    }
    /**
    * @return float|null
    */
    public function getMemoryTotal(): ?float
    {
        return $this->memoryTotal;
    }

    /**
     * @param float|null $memoryTotal Total available memory in bytes
     */
    public function setMemoryTotal(?float $memoryTotal): self
    {
        $this->memoryTotal = $memoryTotal;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getNetIn(): ?int
    {
        return $this->netIn;
    }

    /**
     * @param int|null $netIn Inbound network traffic in bytes
     */
    public function setNetIn(?int $netIn): self
    {
        $this->netIn = $netIn;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getNetOut(): ?int
    {
        return $this->netOut;
    }

    /**
     * @param int|null $netOut Outbound network traffic in bytes
     */
    public function setNetOut(?int $netOut): self
    {
        $this->netOut = $netOut;

        return $this;
    }
}

