<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class VPSV1VirtualMachineVirtualMachineResource 
{
    /**
     * @var string
     */
    public const STATE_RUNNING = 'running';
    /**
     * @var string
     */
    public const STATE_STARTING = 'starting';
    /**
     * @var string
     */
    public const STATE_STOPPING = 'stopping';
    /**
     * @var string
     */
    public const STATE_STOPPED = 'stopped';
    /**
     * @var string
     */
    public const STATE_CREATING = 'creating';
    /**
     * @var string
     */
    public const STATE_INITIAL = 'initial';
    /**
     * @var string
     */
    public const STATE_ERROR = 'error';
    /**
     * @var string
     */
    public const STATE_SUSPENDING = 'suspending';
    /**
     * @var string
     */
    public const STATE_UNSUSPENDING = 'unsuspending';
    /**
     * @var string
     */
    public const STATE_SUSPENDED = 'suspended';
    /**
     * @var string
     */
    public const STATE_DESTROYING = 'destroying';
    /**
     * @var string
     */
    public const STATE_DESTROYED = 'destroyed';
    /**
     * @var string
     */
    public const STATE_RECREATING = 'recreating';
    /**
     * @var string
     */
    public const STATE_RESTORING = 'restoring';
    /**
     * @var string
     */
    public const STATE_RECOVERY = 'recovery';
    /**
     * @var string
     */
    public const STATE_STOPPING_RECOVERY = 'stopping_recovery';

    /**
     * @var string
     */
    public const ACTIONS_LOCK_UNLOCKED = 'unlocked';
    /**
     * @var string
     */
    public const ACTIONS_LOCK_LOCKED = 'locked';

    /**
     * @var int|null $id
     */
    private ?int $id;

    /**
     * @var int|null $firewallGroupId
     */
    private ?int $firewallGroupId = null;

    /**
     * @var string|null $subscriptionId
     */
    private ?string $subscriptionId = null;

    /**
     * @var int|null $dataCenterId
     */
    private ?int $dataCenterId = null;

    /**
     * @var string|null $plan
     */
    private ?string $plan = null;

    /**
     * @var string|null $hostname
     */
    private ?string $hostname;

    /**
     * @var string|null $state
     */
    private ?string $state;

    /**
     * @var string|null $actionsLock
     */
    private ?string $actionsLock;

    /**
     * @var int|null $cpus
     */
    private ?int $cpus;

    /**
     * @var int|null $memory
     */
    private ?int $memory;

    /**
     * @var int|null $disk
     */
    private ?int $disk;

    /**
     * @var int|null $bandwidth
     */
    private ?int $bandwidth;

    /**
     * @var string|null $ns1
     */
    private ?string $ns1 = null;

    /**
     * @var string|null $ns2
     */
    private ?string $ns2 = null;

    /**
     * @var \Hostinger\Model\VPSV1IPAddressIPAddressResource[]|null $ipv4
     */
    private ?array $ipv4;

    /**
     * @var \Hostinger\Model\VPSV1IPAddressIPAddressResource[]|null $ipv6
     */
    private ?array $ipv6;

    /**
     * @var \Hostinger\Model\VPSV1TemplateTemplateResource|null $template
     */
    private ?\Hostinger\Model\VPSV1TemplateTemplateResource $template = null;

    /**
     * @var \DateTime|null $createdAt
     */
    private ?\DateTime $createdAt;

    /**
    * @return int|null
    */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * @param int|null $id Virtual machine ID
     */
    public function setId(?int $id): self
    {
        $this->id = $id;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getFirewallGroupId(): ?int
    {
        return $this->firewallGroupId;
    }

    /**
     * @param int|null $firewallGroupId Active firewall ID, `null` if disabled
     */
    public function setFirewallGroupId(?int $firewallGroupId): self
    {
        $this->firewallGroupId = $firewallGroupId;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getSubscriptionId(): ?string
    {
        return $this->subscriptionId;
    }

    /**
     * @param string|null $subscriptionId Subscription ID
     */
    public function setSubscriptionId(?string $subscriptionId): self
    {
        $this->subscriptionId = $subscriptionId;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getDataCenterId(): ?int
    {
        return $this->dataCenterId;
    }

    /**
     * @param int|null $dataCenterId Data center ID
     */
    public function setDataCenterId(?int $dataCenterId): self
    {
        $this->dataCenterId = $dataCenterId;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getPlan(): ?string
    {
        return $this->plan;
    }

    /**
     * @param string|null $plan VPS plan name
     */
    public function setPlan(?string $plan): self
    {
        $this->plan = $plan;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getHostname(): ?string
    {
        return $this->hostname;
    }

    /**
     * @param string|null $hostname hostname
     */
    public function setHostname(?string $hostname): self
    {
        $this->hostname = $hostname;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * @param string|null $state state
     */
    public function setState(?string $state): self
    {
        $this->state = $state;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getActionsLock(): ?string
    {
        return $this->actionsLock;
    }

    /**
     * @param string|null $actionsLock actionsLock
     */
    public function setActionsLock(?string $actionsLock): self
    {
        $this->actionsLock = $actionsLock;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getCpus(): ?int
    {
        return $this->cpus;
    }

    /**
     * @param int|null $cpus CPUs count assigned to virtual machine
     */
    public function setCpus(?int $cpus): self
    {
        $this->cpus = $cpus;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getMemory(): ?int
    {
        return $this->memory;
    }

    /**
     * @param int|null $memory Memory available to virtual machine (in megabytes)
     */
    public function setMemory(?int $memory): self
    {
        $this->memory = $memory;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getDisk(): ?int
    {
        return $this->disk;
    }

    /**
     * @param int|null $disk Virtual machine disk size (in megabytes)
     */
    public function setDisk(?int $disk): self
    {
        $this->disk = $disk;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getBandwidth(): ?int
    {
        return $this->bandwidth;
    }

    /**
     * @param int|null $bandwidth Monthly internet traffic available to virtual machine (in megabytes)
     */
    public function setBandwidth(?int $bandwidth): self
    {
        $this->bandwidth = $bandwidth;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getNs1(): ?string
    {
        return $this->ns1;
    }

    /**
     * @param string|null $ns1 Primary DNS resolver
     */
    public function setNs1(?string $ns1): self
    {
        $this->ns1 = $ns1;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getNs2(): ?string
    {
        return $this->ns2;
    }

    /**
     * @param string|null $ns2 Secondary DNS resolver
     */
    public function setNs2(?string $ns2): self
    {
        $this->ns2 = $ns2;

        return $this;
    }
    /**
    * @return \Hostinger\Model\VPSV1IPAddressIPAddressResource[]|null
    */
    public function getIpv4(): ?array
    {
        return $this->ipv4;
    }

    /**
     * @param \Hostinger\Model\VPSV1IPAddressIPAddressResource[]|null $ipv4 Array of [`VPS.V1.IPAddress.IPAddressResource`](#model/vpsv1ipaddressipaddressresource)
     */
    public function setIpv4(?array $ipv4): self
    {
        $this->ipv4 = $ipv4;

        return $this;
    }
    /**
    * @return \Hostinger\Model\VPSV1IPAddressIPAddressResource[]|null
    */
    public function getIpv6(): ?array
    {
        return $this->ipv6;
    }

    /**
     * @param \Hostinger\Model\VPSV1IPAddressIPAddressResource[]|null $ipv6 Array of [`VPS.V1.IPAddress.IPAddressResource`](#model/vpsv1ipaddressipaddressresource)
     */
    public function setIpv6(?array $ipv6): self
    {
        $this->ipv6 = $ipv6;

        return $this;
    }
    /**
    * @return \Hostinger\Model\VPSV1TemplateTemplateResource|null
    */
    public function getTemplate(): ?\Hostinger\Model\VPSV1TemplateTemplateResource
    {
        return $this->template;
    }

    /**
     * @param \Hostinger\Model\VPSV1TemplateTemplateResource|null $template template
     */
    public function setTemplate(?\Hostinger\Model\VPSV1TemplateTemplateResource $template): self
    {
        $this->template = $template;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * @param \DateTime|null $createdAt createdAt
     */
    public function setCreatedAt(?\DateTime $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }
}

