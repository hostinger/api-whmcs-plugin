<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class DomainsV1DomainDomainExtendedResource 
{
    /**
     * @var string
     */
    public const STATUS_ACTIVE = 'active';
    /**
     * @var string
     */
    public const STATUS_PENDING_SETUP = 'pending_setup';
    /**
     * @var string
     */
    public const STATUS_EXPIRED = 'expired';
    /**
     * @var string
     */
    public const STATUS_REQUESTED = 'requested';
    /**
     * @var string
     */
    public const STATUS_PENDING_VERIFICATION = 'pending_verification';
    /**
     * @var string
     */
    public const STATUS_DELETED = 'deleted';
    /**
     * @var string
     */
    public const STATUS_SUSPENDED = 'suspended';
    /**
     * @var string
     */
    public const STATUS_FAILED = 'failed';

    /**
     * @var string|null $domain
     */
    private ?string $domain;

    /**
     * @var string|null $status
     */
    private ?string $status;

    /**
     * @var string|null $message
     */
    private ?string $message = null;

    /**
     * @var bool|null $isPrivacyProtectionAllowed
     */
    private ?bool $isPrivacyProtectionAllowed;

    /**
     * @var bool|null $isPrivacyProtected
     */
    private ?bool $isPrivacyProtected;

    /**
     * @var bool|null $isLockable
     */
    private ?bool $isLockable;

    /**
     * @var bool|null $isLocked
     */
    private ?bool $isLocked;

    /**
     * @var \Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers|null $nameServers
     */
    private ?\Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers $nameServers;

    /**
     * @var string[][]|null $childNameServers
     */
    private ?array $childNameServers;

    /**
     * @var \Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts|null $domainContacts
     */
    private ?\Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts $domainContacts;

    /**
     * @var \DateTime|null $createdAt
     */
    private ?\DateTime $createdAt;

    /**
     * @var \DateTime|null $updatedAt
     */
    private ?\DateTime $updatedAt;

    /**
     * @var \DateTime|null $_60daysLockExpiresAt
     */
    private ?\DateTime $_60daysLockExpiresAt = null;

    /**
     * @var \DateTime|null $registeredAt
     */
    private ?\DateTime $registeredAt = null;

    /**
     * @var \DateTime|null $expiresAt
     */
    private ?\DateTime $expiresAt = null;

    /**
    * @return string|null
    */
    public function getDomain(): ?string
    {
        return $this->domain;
    }

    /**
     * @param string|null $domain Domain name
     */
    public function setDomain(?string $domain): self
    {
        $this->domain = $domain;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * @param string|null $status Status of the domain
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getMessage(): ?string
    {
        return $this->message;
    }

    /**
     * @param string|null $message message
     */
    public function setMessage(?string $message): self
    {
        $this->message = $message;

        return $this;
    }
    /**
    * @return bool|null
    */
    public function getIsPrivacyProtectionAllowed(): ?bool
    {
        return $this->isPrivacyProtectionAllowed;
    }

    /**
     * @param bool|null $isPrivacyProtectionAllowed Is privacy protection allowed for the domain
     */
    public function setIsPrivacyProtectionAllowed(?bool $isPrivacyProtectionAllowed): self
    {
        $this->isPrivacyProtectionAllowed = $isPrivacyProtectionAllowed;

        return $this;
    }
    /**
    * @return bool|null
    */
    public function getIsPrivacyProtected(): ?bool
    {
        return $this->isPrivacyProtected;
    }

    /**
     * @param bool|null $isPrivacyProtected Is privacy protection enabled for the domain
     */
    public function setIsPrivacyProtected(?bool $isPrivacyProtected): self
    {
        $this->isPrivacyProtected = $isPrivacyProtected;

        return $this;
    }
    /**
    * @return bool|null
    */
    public function getIsLockable(): ?bool
    {
        return $this->isLockable;
    }

    /**
     * @param bool|null $isLockable Is domain allowed to be locked
     */
    public function setIsLockable(?bool $isLockable): self
    {
        $this->isLockable = $isLockable;

        return $this;
    }
    /**
    * @return bool|null
    */
    public function getIsLocked(): ?bool
    {
        return $this->isLocked;
    }

    /**
     * @param bool|null $isLocked Is domain locked
     */
    public function setIsLocked(?bool $isLocked): self
    {
        $this->isLocked = $isLocked;

        return $this;
    }
    /**
    * @return \Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers|null
    */
    public function getNameServers(): ?\Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers
    {
        return $this->nameServers;
    }

    /**
     * @param \Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers|null $nameServers nameServers
     */
    public function setNameServers(?\Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers $nameServers): self
    {
        $this->nameServers = $nameServers;

        return $this;
    }
    /**
    * @return string[][]|null
    */
    public function getChildNameServers(): ?array
    {
        return $this->childNameServers;
    }

    /**
     * @param string[][]|null $childNameServers Child name servers
     */
    public function setChildNameServers(?array $childNameServers): self
    {
        $this->childNameServers = $childNameServers;

        return $this;
    }
    /**
    * @return \Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts|null
    */
    public function getDomainContacts(): ?\Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts
    {
        return $this->domainContacts;
    }

    /**
     * @param \Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts|null $domainContacts domainContacts
     */
    public function setDomainContacts(?\Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts $domainContacts): self
    {
        $this->domainContacts = $domainContacts;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * @param \DateTime|null $createdAt createdAt
     */
    public function setCreatedAt(?\DateTime $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
     * @param \DateTime|null $updatedAt updatedAt
     */
    public function setUpdatedAt(?\DateTime $updatedAt): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function get60daysLockExpiresAt(): ?\DateTime
    {
        return $this->_60daysLockExpiresAt;
    }

    /**
     * @param \DateTime|null $_60daysLockExpiresAt _60daysLockExpiresAt
     */
    public function set60daysLockExpiresAt(?\DateTime $_60daysLockExpiresAt): self
    {
        $this->_60daysLockExpiresAt = $_60daysLockExpiresAt;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function getRegisteredAt(): ?\DateTime
    {
        return $this->registeredAt;
    }

    /**
     * @param \DateTime|null $registeredAt registeredAt
     */
    public function setRegisteredAt(?\DateTime $registeredAt): self
    {
        $this->registeredAt = $registeredAt;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function getExpiresAt(): ?\DateTime
    {
        return $this->expiresAt;
    }

    /**
     * @param \DateTime|null $expiresAt expiresAt
     */
    public function setExpiresAt(?\DateTime $expiresAt): self
    {
        $this->expiresAt = $expiresAt;

        return $this;
    }
}

