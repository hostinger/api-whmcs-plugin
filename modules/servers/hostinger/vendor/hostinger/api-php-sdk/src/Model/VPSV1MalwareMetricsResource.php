<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class VPSV1MalwareMetricsResource 
{

    /**
     * @var int|null $records
     */
    private ?int $records;

    /**
     * @var int|null $malicious
     */
    private ?int $malicious;

    /**
     * @var int|null $compromised
     */
    private ?int $compromised;

    /**
     * @var int|null $scannedFiles
     */
    private ?int $scannedFiles;

    /**
     * @var \DateTime|null $scanStartedAt
     */
    private ?\DateTime $scanStartedAt;

    /**
     * @var \DateTime|null $scanEndedAt
     */
    private ?\DateTime $scanEndedAt = null;

    /**
    * @return int|null
    */
    public function getRecords(): ?int
    {
        return $this->records;
    }

    /**
     * @param int|null $records Records found during last scan
     */
    public function setRecords(?int $records): self
    {
        $this->records = $records;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getMalicious(): ?int
    {
        return $this->malicious;
    }

    /**
     * @param int|null $malicious Malicious files found during last scan
     */
    public function setMalicious(?int $malicious): self
    {
        $this->malicious = $malicious;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getCompromised(): ?int
    {
        return $this->compromised;
    }

    /**
     * @param int|null $compromised Compromised files found during last scan
     */
    public function setCompromised(?int $compromised): self
    {
        $this->compromised = $compromised;

        return $this;
    }
    /**
    * @return int|null
    */
    public function getScannedFiles(): ?int
    {
        return $this->scannedFiles;
    }

    /**
     * @param int|null $scannedFiles Total number of files scanned during last scan
     */
    public function setScannedFiles(?int $scannedFiles): self
    {
        $this->scannedFiles = $scannedFiles;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function getScanStartedAt(): ?\DateTime
    {
        return $this->scanStartedAt;
    }

    /**
     * @param \DateTime|null $scanStartedAt scanStartedAt
     */
    public function setScanStartedAt(?\DateTime $scanStartedAt): self
    {
        $this->scanStartedAt = $scanStartedAt;

        return $this;
    }
    /**
    * @return \DateTime|null
    */
    public function getScanEndedAt(): ?\DateTime
    {
        return $this->scanEndedAt;
    }

    /**
     * @param \DateTime|null $scanEndedAt scanEndedAt
     */
    public function setScanEndedAt(?\DateTime $scanEndedAt): self
    {
        $this->scanEndedAt = $scanEndedAt;

        return $this;
    }
}

