<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class BillingV1CatalogCatalogItemResource 
{

    /**
     * @var string|null $id
     */
    private ?string $id;

    /**
     * @var string|null $name
     */
    private ?string $name;

    /**
     * @var string|null $category
     */
    private ?string $category;

    /**
     * @var object|null $metadata
     */
    private ?object $metadata = null;

    /**
     * @var \Hostinger\Model\BillingV1CatalogCatalogItemPriceResource[]|null $prices
     */
    private ?array $prices;

    /**
    * @return string|null
    */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * @param string|null $id Catalog item ID
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * @param string|null $name name
     */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getCategory(): ?string
    {
        return $this->category;
    }

    /**
     * @param string|null $category category
     */
    public function setCategory(?string $category): self
    {
        $this->category = $category;

        return $this;
    }
    /**
    * @return object|null
    */
    public function getMetadata(): ?object
    {
        return $this->metadata;
    }

    /**
     * @param object|null $metadata Flexible key-value storage containing category-specific metadata for the catalog item. The structure and available fields vary depending on the item category.
     */
    public function setMetadata(?object $metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }
    /**
    * @return \Hostinger\Model\BillingV1CatalogCatalogItemPriceResource[]|null
    */
    public function getPrices(): ?array
    {
        return $this->prices;
    }

    /**
     * @param \Hostinger\Model\BillingV1CatalogCatalogItemPriceResource[]|null $prices Array of [`Billing.V1.Catalog.CatalogItemPriceResource`](#model/billingv1catalogcatalogitempriceresource)
     */
    public function setPrices(?array $prices): self
    {
        $this->prices = $prices;

        return $this;
    }
}

