<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class VPSV1DockerManagerContainerResource 
{
    /**
     * @var string
     */
    public const STATE_CREATED = 'created';
    /**
     * @var string
     */
    public const STATE_RUNNING = 'running';
    /**
     * @var string
     */
    public const STATE_RESTARTING = 'restarting';
    /**
     * @var string
     */
    public const STATE_EXITED = 'exited';
    /**
     * @var string
     */
    public const STATE_PAUSED = 'paused';
    /**
     * @var string
     */
    public const STATE_DEAD = 'dead';
    /**
     * @var string
     */
    public const STATE_STOPPING = 'stopping';

    /**
     * @var string
     */
    public const HEALTH_STARTING = 'starting';
    /**
     * @var string
     */
    public const HEALTH_HEALTHY = 'healthy';
    /**
     * @var string
     */
    public const HEALTH_UNHEALTHY = 'unhealthy';
    /**
     * @var string
     */
    public const HEALTH_EMPTY = '';

    /**
     * @var string|null $id
     */
    private ?string $id;

    /**
     * @var string|null $name
     */
    private ?string $name;

    /**
     * @var string|null $image
     */
    private ?string $image;

    /**
     * @var string|null $command
     */
    private ?string $command;

    /**
     * @var string|null $status
     */
    private ?string $status;

    /**
     * @var string|null $state
     */
    private ?string $state;

    /**
     * @var string|null $health
     */
    private ?string $health;

    /**
     * @var \Hostinger\Model\VPSV1DockerManagerContainerPortResource[]|null $ports
     */
    private ?array $ports;

    /**
     * @var \Hostinger\Model\VPSV1DockerManagerContainerStatsResource|null $stats
     */
    private ?\Hostinger\Model\VPSV1DockerManagerContainerStatsResource $stats = null;

    /**
    * @return string|null
    */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * @param string|null $id Unique container identifier (short form of Docker container ID)
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * @param string|null $name Container name as defined in docker-compose or assigned by Docker
     */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getImage(): ?string
    {
        return $this->image;
    }

    /**
     * @param string|null $image Docker image name and tag used to create this container
     */
    public function setImage(?string $image): self
    {
        $this->image = $image;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getCommand(): ?string
    {
        return $this->command;
    }

    /**
     * @param string|null $command Command being executed inside the container (may be truncated with ...)
     */
    public function setCommand(?string $command): self
    {
        $this->command = $command;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * @param string|null $status Human-readable container status including uptime, exit codes, or error information
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * @param string|null $state Programmatic container lifecycle state for automated processing
     */
    public function setState(?string $state): self
    {
        $this->state = $state;

        return $this;
    }
    /**
    * @return string|null
    */
    public function getHealth(): ?string
    {
        return $this->health;
    }

    /**
     * @param string|null $health Container health status
     */
    public function setHealth(?string $health): self
    {
        $this->health = $health;

        return $this;
    }
    /**
    * @return \Hostinger\Model\VPSV1DockerManagerContainerPortResource[]|null
    */
    public function getPorts(): ?array
    {
        return $this->ports;
    }

    /**
     * @param \Hostinger\Model\VPSV1DockerManagerContainerPortResource[]|null $ports Array of [`VPS.V1.DockerManager.ContainerPortResource`](#model/vpsv1dockermanagercontainerportresource)
     */
    public function setPorts(?array $ports): self
    {
        $this->ports = $ports;

        return $this;
    }
    /**
    * @return \Hostinger\Model\VPSV1DockerManagerContainerStatsResource|null
    */
    public function getStats(): ?\Hostinger\Model\VPSV1DockerManagerContainerStatsResource
    {
        return $this->stats;
    }

    /**
     * @param \Hostinger\Model\VPSV1DockerManagerContainerStatsResource|null $stats stats
     */
    public function setStats(?\Hostinger\Model\VPSV1DockerManagerContainerStatsResource $stats): self
    {
        $this->stats = $stats;

        return $this;
    }
}

