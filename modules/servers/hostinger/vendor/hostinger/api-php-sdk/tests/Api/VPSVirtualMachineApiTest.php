<?php

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.99
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Test\Api;

use Hostinger\Configuration;
use Hostinger\ApiException;
use Hostinger\ObjectSerializer;
use PHPUnit\Framework\TestCase;

class VPSVirtualMachineApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getAttachedPublicKeysV1
     *
     * Get attached public keys.
     *
     */
    public function testGetAttachedPublicKeysV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMetricsV1
     *
     * Get metrics.
     *
     */
    public function testGetMetricsV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getVirtualMachineDetailsV1
     *
     * Get virtual machine details.
     *
     */
    public function testGetVirtualMachineDetailsV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getVirtualMachinesV1
     *
     * Get virtual machines.
     *
     */
    public function testGetVirtualMachinesV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for purchaseNewVirtualMachineV1
     *
     * Purchase new virtual machine.
     *
     */
    public function testPurchaseNewVirtualMachineV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for recreateVirtualMachineV1
     *
     * Recreate virtual machine.
     *
     */
    public function testRecreateVirtualMachineV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetHostnameV1
     *
     * Reset hostname.
     *
     */
    public function testResetHostnameV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartVirtualMachineV1
     *
     * Restart virtual machine.
     *
     */
    public function testRestartVirtualMachineV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setHostnameV1
     *
     * Set hostname.
     *
     */
    public function testSetHostnameV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setNameserversV1
     *
     * Set nameservers.
     *
     */
    public function testSetNameserversV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setPanelPasswordV1
     *
     * Set panel password.
     *
     */
    public function testSetPanelPasswordV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setRootPasswordV1
     *
     * Set root password.
     *
     */
    public function testSetRootPasswordV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setupPurchasedVirtualMachineV1
     *
     * Setup purchased virtual machine.
     *
     */
    public function testSetupPurchasedVirtualMachineV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startVirtualMachineV1
     *
     * Start virtual machine.
     *
     */
    public function testStartVirtualMachineV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for stopVirtualMachineV1
     *
     * Stop virtual machine.
     *
     */
    public function testStopVirtualMachineV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
